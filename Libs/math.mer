# Standard Math Mercury Library
# Last update 7/2/2025

# Global variable in math
let pi = 3.1415926535897932384626433832795
let e = 2.7182818284590452353602874713527
let tau = 6.283185307179586476925286766559
let gr = 1.6180339887498948482045868343656

let __minus_1 = 0 - 1

func to_radian(__degree) do
    return __degree * 3.1415926535897932384626433832795 / 180
end

func factorial(__value) do
    let __result = 1
    let __i = 1

    while __i <= __value do
        __result *= __i
        __i += 1
    end

    return __result
end

func sqrt(__value) do
    return __value * __value
end

func power(__value, __times) do
    let __i = 1
    let __result = __value

    while __i < __times do
        __result *= __value
        __i += 1
    end

    return __result
end

func sin(__degree) do
    let __x = to_radian(__degree)
    let __result = 0.0
    let __sign = 1.0
    let __i = 0

    while __i < 10 do
        let __power = 2 * __i + 1
        let __numerator = power(__x, __power)
        let __deno = 1.0
        let __j = 1

        while __j <= __power do
            __deno *= __j
            __j += 1
        end

        __result += __sign * (__numerator / __deno)
        __sign *= (0 - 1)
        __i += 1
    end

    return __result
end

func cos(__degree) do
    let __x = __degree * (3.14159265 / 180.0)
    let __result = 0.0
    let __sign = 1.0
    let __i = 0

    while __i < 10 do
        let __power = 2 * __i
        let __numerator = power(__x, __power)
        let __denominator = 1.0
        let __j = 1

        while __j <= __power do
            __denominator *= __j
            __j += 1
        end

        __result += __sign * (__numerator / __denominator)
        __sign *= (0 - 1)
        __i += 1
    end

    return __result
end

func tan(__degree) do
    let __s = sin(__degree)
    let __c = cos(__degree)

    if __c == 0.0 then
        return "inf"
    end

    return __s / __c
end

func cot(__degree) do
    let __s = sin(__degree)
    let __c = cos(__degree)

    if __s == 0.0 then
        return "inf"
    end

    return __c / __s
end

func isdigit(__v) do
    return same(__v, "1") or same(__v, "2") or same(__v, "3") or
           same(__v, "4") or same(__v, "5") or same(__v, "6") or
           same(__v, "7") or same(__v, "8") or same(__v, "9")
end