{
  "scopeName": "source.mercury",
  "name": "MercuryLang",
  "fileTypes": ["mer"],
  "patterns": [
    {
      "name": "keyword.control.mercury",
      "match": "\\b(if|list|else|while|for|let|do|end|void|loop|include|func|class|struct|const|delete|then|in|and|or|not|continue|break|return|auto|new)\\b"
    },
    {
      "name": "constant.language.mercury",
      "match": "\\b(true|false|null|None|pi|euler)\\b"
    },
    {
      "name": "support.function.builtin.mercury",
      "match": "\\b(print|input|to_list|len|range|type|write|sin|cos|isdigit|tan|cot|sqrt|split|size|pop|watch|puts|push|ch|glb|sub|help|exit|pause|eval|cls|same|random|randint)\\b"
    },
    {
      "name": "storage.type.mercury",
      "match": "\\b(int|float)\\b"
    },
    {
      "name": "comment.line.number-sign.mercury",
      "match": "#.*$"
    },
    {
      "name": "string.quoted.double.mercury",
      "begin": "\"",
      "end": "\"",
      "patterns": [
        {
          "match": "\\\\.",
          "name": "constant.character.escape.mercury"
        }
      ]
    },
    {
      "name": "string.quoted.single.mercury",
      "begin": "'",
      "end": "'",
      "patterns": [
        {
          "match": "\\\\.",
          "name": "constant.character.escape.mercury"
        }
      ]
    },
    {
      "name": "constant.numeric.mercury",
      "match": "\\b\\d+(\\.\\d+)?\\b"
    },
    {
      "name": "keyword.operator.mercury",
      "match": "(==|!=|<=|>=|<|>|=|\\+|\\-|\\*|/|%|\\+=|-=|\\*=|/=)"
    }
  ]
}
